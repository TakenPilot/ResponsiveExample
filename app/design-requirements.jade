extends layout
block content
  .row.marketing
    .col-sm-6
      h4 Internal Consistency
      p.
        If something looks the same, then it should behave the same.  No surprises.
      p.
        Editing tasks require CRUD (Create, Read, Update, Destroy).  Each requires a consistent design so that the
        fluidity of the page doesn't become overwhelmingly complex.
      p.
        Define a set of generic tasks (list, select items, view details, edit item), and make each page exactly the
        same as similar tasks.  These pages can be templated, so that responsive design can be added to all of them at
        once.
      p.
        Define a set of generic classes to be used whenever certain tasks are required. It is difficult to create
        reusable components that react properly with the rest of the elements on the page when the content is fluid.
        Normal static components that work on 'fixed' pages will not work on fluid pages.  More effort must be taken to
        create components that react to their surrounding elements correctly.
      pre
        | //examples of css class names based on tasks
        | select from a list --> .select-list
        | choosing options -->  .choose-options
        | opening a dialog -->  .open-dialog
    .col-sm-6
      h4 Responsive Images
      p Responsive designs need many versions of each image.  (x1, x1.5, x2)
      p Images are chosen based on pixel density of the device.
      p Frameworks such as SASS, LESS, or Stylus handle the complexity of creating sprites and changing images.
  .row.marketing
    .col-sm-6
      h4 Design for all
      p Dialogs and notifications represent either a change of application state or that an exception has occured.  Try to avoid these, because they tend to create complexity in responsive designs.  Think of Facebook, Google and Microsoft Office products.
      p Show, don't tell.  Almost all situations that use dialogs or that create exceptions can be avoided with better design.